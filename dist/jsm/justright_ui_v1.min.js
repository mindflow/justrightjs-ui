import{ComponentFactory,EventRegistry,CanvasStyles,StylesRegistry,InputElementDataBinding,EmailValidator,RequiredValidator,PasswordValidator,EqualsPropertyValidator,AndValidatorSet,PhoneValidator}from"./justright_core_v1.js";import{ObjectFunction,Logger,TimePromise,PropertyAccessor}from"./coreutil_v1.js";import{InjectionPoint}from"./mindi_v1.js";class BackShadeListeners{constructor(t=null){this.backgroundClickedListener=t&&t.getBackgroundClicked?t.getBackgroundClicked():null}withBackgroundClicked(t,n){return this.backgroundClickedListener=new ObjectFunction(t,n),this}getBackgroundClicked(){return this.backgroundClickedListener}callBackgroundClicked(t){this.callListener(this.backgroundClickedListener,t)}callListener(t,n){null!=t&&t.call(n)}}const LOG=new Logger("BackShade");class BackShade{static get COMPONENT_NAME(){return"BackShade"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/backShade.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/backShade.css"}constructor(t=new BackShadeListeners){this.componentFactory=InjectionPoint.instance(ComponentFactory),this.component=null,this.eventRegistry=InjectionPoint.instance(EventRegistry),this.container=null,this.backShadeListeners=t,this.hidden=!0}postConfig(){this.component=this.componentFactory.create(BackShade.COMPONENT_NAME),this.eventRegistry.attach(this.component.get("backShade"),"onclick","//event:backShadeClicked",this.component.componentIndex),this.eventRegistry.listen("//event:backShadeClicked",new ObjectFunction(this,this.backgroundClickOccured),this.component.componentIndex)}backgroundClickOccured(){this.backShadeListeners.callBackgroundClicked()}hideAfter(t){if(this.hidden)return new Promise((t,n)=>{t()});this.hidden=!0,this.component.get("backShade").setAttributeValue("class","back-shade fade");const n=TimePromise.asPromise(t,()=>{this.component.get("backShade").setStyle("display","none")}),e=TimePromise.asPromise(t+1,()=>{CanvasStyles.disableStyle(BackShade.COMPONENT_NAME,this.component.componentIndex)});return Promise.all([n,e])}hide(){return this.disableAfter(500)}show(){return this.hidden?(this.hidden=!1,CanvasStyles.enableStyle(BackShade.COMPONENT_NAME,this.component.componentIndex),this.component.get("backShade").setStyle("display","block"),TimePromise.asPromise(100,()=>{this.component.get("backShade").setAttributeValue("class","back-shade fade show")})):new Promise((t,n)=>{t()})}}class CustomAppearance{static get SIZE_DEFAULT(){return"size-default"}static get SIZE_SMALL(){return"size-small"}static get SIZE_MEDIUM(){return"size-medium"}static get SIZE_LARGE(){return"size-large"}static get SHAPE_DEAFULT(){return"shape-default"}static get SHAPE_ROUND(){return"shape-round"}static get SHAPE_SQUARE(){return"shape-square"}static get VISIBILITY_DEAFULT(){return"visibility-default"}static get VISIBILITY_VISIBLE(){return"visibility-visible"}static get VISIBILITY_HIDDEN(){return"visibility-hidden"}static get SPACING_DEFAULT(){return"spacing-default"}static get SPACING_NONE(){return"spacing-none"}static get SPACING_ABOVE(){return"spacing-above"}static get SPACING_BELOW(){return"spacing-below"}static get SPACING_ABOVE_BELOW(){return"spacing-above-below"}constructor(){this.size=CustomAppearance.SIZE_DEFAULT,this.shape=CustomAppearance.SHAPE_DEAFULT,this.spacing=CustomAppearance.SPACING_DEFAULT,this.visibility=CustomAppearance.VISIBILITY_DEAFULT,this.locked=!1}withSize(t){return this.size=t,this}withShape(t){return this.shape=t,this}withSpacing(t){return this.spacing=t,this}withVisibility(t){return this.visibility=t,this}}const LOG$1=new Logger("BannerMessage");class BannerMessage{static get COMPONENT_NAME(){return"BannerMessage"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/bannerMessage.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/bannerMessage.css"}static get TYPE_ALERT(){return"type-alert"}static get TYPE_INFO(){return"type-info"}static get TYPE_SUCCESS(){return"type-success"}static get TYPE_WARNING(){return"type-warning"}constructor(t,n=BannerMessage.TYPE_INFO,e=!1,s=null){this.componentFactory=InjectionPoint.instance(ComponentFactory),this.component=null,this.message=t,this.closeable=e,this.bannerType=n,this.eventRegistry=InjectionPoint.instance(EventRegistry),this.onHideListener=null,this.onShowListener=null,this.customAppearance=s}postConfig(){this.component=this.componentFactory.create("BannerMessage"),this.component.get("bannerMessageHeader").setChild("Alert"),this.component.get("bannerMessageMessage").setChild(this.message),this.applyClasses("banner-message fade"),this.eventRegistry.attach(this.component.get("bannerMessageCloseButton"),"onclick","//event:bannerMessageCloseButtonClicked",this.component.componentIndex),this.eventRegistry.listen("//event:bannerMessageCloseButtonClicked",new ObjectFunction(this,this.hide),this.component.componentIndex)}applyClasses(t){let n=t;n=n+" banner-message-"+this.bannerType,this.customAppearance&&(this.customAppearance.shape&&(n=n+" banner-message-"+this.customAppearance.shape),this.customAppearance.size&&(n=n+" banner-message-"+this.customAppearance.size),this.customAppearance.spacing&&(n=n+" banner-message-"+this.customAppearance.spacing)),this.component.get("bannerMessage").setAttributeValue("class",n)}applyHeader(t){this.header=t,this.component.get("bannerMessageHeader").setChild(this.header)}applyMessage(t){this.message=t,this.component.get("bannerMessageMessage").setChild(this.message)}remove(){return this.component.remove()}onHide(t){this.onHideListener=t}onShow(t){this.onShowListener=t}hide(){this.applyClasses("banner-message hide"),setTimeout(()=>{this.component.get("bannerMessage").setStyle("display","none")},500),setTimeout(()=>{CanvasStyles.disableStyle(BannerMessage.COMPONENT_NAME,this.component.componentIndex)},501),this.onHideListener&&this.onHideListener.call()}show(t=null,n=null){t&&this.applyHeader(t),n&&this.applyMessage(n),CanvasStyles.enableStyle(BannerMessage.COMPONENT_NAME,this.component.componentIndex),this.component.get("bannerMessage").setStyle("display","block"),setTimeout(()=>{this.applyClasses("banner-message show")},100),this.onShowListener&&this.onShowListener.call()}}class CommonListeners{constructor(){}withClickListener(t,n){return this.clickListener=new ObjectFunction(t,n),this}withKeyUpListener(t,n){return this.keyUpListener=new ObjectFunction(t,n),this}withEnterListener(t,n){return this.enterListener=new ObjectFunction(t,n),this}withBlurListener(t,n){return this.blurListener=new ObjectFunction(t,n),this}withChangeListener(t,n){return this.changeListener=new ObjectFunction(t,n),this}withFocusListener(t,n){return this.focusListener=new ObjectFunction(t,n),this}callClick(t){this.callListener(this.clickListener,t)}callKeyUp(t){this.callListener(this.keyUpListener,t)}callEnter(t){this.callListener(this.enterListener,t)}callBlur(t){this.callListener(this.blurListener,t)}callChange(t){this.callListener(this.changeListener,t)}callFocus(t){this.callListener(this.focusListener,t)}callListener(t,n){null!=t&&t.call(n)}}const LOG$2=new Logger("Button");class Button{static get COMPONENT_NAME(){return"Button"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/button.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/button.css"}static get TYPE_PRIMARY(){return"button-primary"}static get TYPE_SECONDARY(){return"button-secondary"}static get TYPE_SUCCESS(){return"button-success"}static get TYPE_INFO(){return"button-info"}static get TYPE_WARNING(){return"button-warning"}static get TYPE_DANGER(){return"button-danger"}static get TYPE_LIGHT(){return"button-light"}static get TYPE_DARK(){return"button-dark"}constructor(t,n=null,e=Button.TYPE_PRIMARY){this.componentFactory=InjectionPoint.instance(ComponentFactory),this.component=null,this.label=t,this.commonListeners=null!=n?n:new CommonListeners,this.buttonType=e,this.eventRegistry=InjectionPoint.instance(EventRegistry)}postConfig(){this.component=this.componentFactory.create("Button"),CanvasStyles.enableStyle(Button.COMPONENT_NAME),this.component.get("button").setChild(this.label),this.component.get("button").setAttributeValue("class","button "+this.buttonType),this.registerClickListener()}registerClickListener(){return this.eventRegistry.attach(this.component.get("button"),"onclick","//event:buttonClicked",this.component.componentIndex),this.eventRegistry.listen("//event:buttonClicked",new ObjectFunction(this,this.clicked),this.component.componentIndex),this}clicked(t){this.commonListeners.callClick(t)}enableLoading(){this.component.get("spinnerContainer").setAttributeValue("class","button-spinner-container-visible")}disableLoading(){this.component.get("spinnerContainer").setAttributeValue("class","button-spinner-container-hidden")}disable(){this.component.get("button").setAttributeValue("disabled","true")}enable(){this.component.get("button").removeAttribute("disabled")}}const LOG$3=new Logger("DialogBox");class DialogBox{static get COMPONENT_NAME(){return"DialogBox"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/dialogBox.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/dialogBox.css"}constructor(){this.eventRegistry=InjectionPoint.instance(EventRegistry),this.componentFactory=InjectionPoint.instance(ComponentFactory),this.component=null,this.backShade=InjectionPoint.instance(BackShade,[(new BackShadeListeners).withBackgroundClicked(this,this.backshadeBackgroundClickOccured)]),this.stylesRegistry=InjectionPoint.instance(StylesRegistry),this.container=null,this.hidden=!0}postConfig(){this.component=this.componentFactory.create(DialogBox.COMPONENT_NAME),this.component.set("backShadeContainer",this.backShade.component),this.eventRegistry.attach(this.component.get("closeButton"),"onclick","//event:closeClicked",this.component.componentIndex),this.eventRegistry.listen("//event:closeClicked",new ObjectFunction(this,this.hide),this.component.componentIndex)}setTitle(t){this.component.setChild("title",t)}backshadeBackgroundClickOccured(){this.hide()}setFooter(t){this.component.get("dialogBoxFooter").setStyle("display","block"),this.component.setChild("dialogBoxFooter",t)}setContent(t){this.component.setChild("dialogBoxContent",t)}set(t,n){this.component.set(t,n)}hide(){if(this.hidden)return new Promise((t,n)=>{t()});this.hidden=!0,this.getDialogBoxWindow().setAttributeValue("class","dialogbox fade");const t=this.backShade.hideAfter(300),n=TimePromise.asPromise(200,()=>{this.getDialogBoxWindow().setStyle("display","none")}),e=TimePromise.asPromise(201,()=>{CanvasStyles.disableStyle(DialogBox.COMPONENT_NAME,this.component.componentIndex)});return Promise.all([n,e,t])}show(){return this.hidden?(this.hidden=!1,CanvasStyles.enableStyle(DialogBox.COMPONENT_NAME,this.component.componentIndex),this.backShade.show(),this.getDialogBoxWindow().setStyle("display","block"),TimePromise.asPromise(100,()=>{this.getDialogBoxWindow().setAttributeValue("class","dialogbox fade show")})):new Promise((t,n)=>{t()})}getDialogBoxWindow(){return this.component.get("dialogBoxWindow")}}const LOG$4=new Logger("CheckBox");class CheckBox{static get COMPONENT_NAME(){return"CheckBox"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/checkBox.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/checkBox.css"}constructor(t,n=null,e=null){this.componentFactory=InjectionPoint.instance(ComponentFactory),this.component=null,this.name=t,this.model=n,this.commonListeners=null!=e?e:new CommonListeners,this.eventRegistry=InjectionPoint.instance(EventRegistry)}postConfig(){this.component=this.componentFactory.create(CheckBox.COMPONENT_NAME),CanvasStyles.enableStyle(CheckBox.COMPONENT_NAME),this.component.get("checkBox").setAttributeValue("name",this.name),this.model&&InputElementDataBinding.link(this.model).to(this.component.get("checkBox"))}}const LOG$5=new Logger("CommonInput");class CommonInput{static get INPUT_CLICK_EVENT_ID(){return"//event:inputClicked"}static get INPUT_KEYUP_EVENT_ID(){return"//event:inputKeyUp"}static get INPUT_ENTER_EVENT_ID(){return"//event:inputEnter"}static get INPUT_CHANGE_EVENT_ID(){return"//event:inputChange"}static get INPUT_BLUR_EVENT_ID(){return"//event:inputBlur"}static get ERROR_CLICK_EVENT_ID(){return"//event:errorClicked"}static get ON_CLICK(){return"onclick"}static get ON_KEYUP(){return"onkeyup"}static get ON_CHANGE(){return"onchange"}static get ON_BLUR(){return"onblur"}constructor(t,n,e=null,s=null,i=null,o=null,r="input",c="error"){this.componentFactory=InjectionPoint.instance(ComponentFactory),this.component=null,this.validator=i,this.componentName=t,this.name=n,this.placeholder=o,this.inputElementId=r,this.errorElementId=c,this.model=e,this.commonListeners=null!=s?s:new CommonListeners,this.eventRegistry=InjectionPoint.instance(EventRegistry),this.tainted=!1}postConfig(){this.component=this.componentFactory.create(this.componentName),CanvasStyles.enableStyle(this.componentName,this.component.componentIndex),this.component.get(this.inputElementId).setAttributeValue("name",this.name),this.component.get(this.inputElementId).setAttributeValue("placeholder",this.placeholder),this.validator&&this.validator.withValidListener(new ObjectFunction(this,this.hideValidationError)),this.model&&InputElementDataBinding.link(this.model,this.validator).to(this.component.get(this.inputElementId)),this.registerListener(this.inputElementId,new ObjectFunction(this,this.entered),CommonInput.ON_KEYUP,CommonInput.INPUT_ENTER_EVENT_ID,t=>t.isKeyCode(13)),this.registerListener(this.inputElementId,new ObjectFunction(this,this.keyupped),CommonInput.ON_KEYUP,CommonInput.INPUT_KEYUP_EVENT_ID),this.registerListener(this.inputElementId,new ObjectFunction(this,this.changed),CommonInput.ON_CHANGE,CommonInput.INPUT_CHANGE_EVENT_ID),this.registerListener(this.inputElementId,new ObjectFunction(this,this.blurred),CommonInput.ON_BLUR,CommonInput.INPUT_BLUR_EVENT_ID),this.registerListener(this.inputElementId,new ObjectFunction(this,this.clicked),CommonInput.ON_CLICK,CommonInput.INPUT_CLICK_EVENT_ID),this.registerListener(this.errorElementId,new ObjectFunction(this,this.errorClicked),CommonInput.ON_CLICK,CommonInput.ERROR_CLICK_EVENT_ID)}registerListener(t,n,e,s,i=null){this.eventRegistry.attach(this.component.get(t),e,s,this.component.componentIndex);let o=n;return i&&(o=new ObjectFunction(this,t=>{i.call(this,t)&&n.call(t)})),this.eventRegistry.listen(s,o,this.component.componentIndex),this}keyupped(t){t.isKeyCode(13)||t.isKeyCode(16)||t.isKeyCode(9)||(this.tainted=!0),this.commonListeners.callKeyUp(t)}changed(t){this.tainted=!0,this.commonListeners.callChange(t)}clicked(t){this.commonListeners.callClick(t)}entered(t){if(!this.validator.isValid())return this.showValidationError(),void this.selectAll();this.commonListeners.callEnter(t)}blurred(t){if(this.tainted){if(!this.validator.isValid())return void this.showValidationError();this.hideValidationError(),this.commonListeners.callBlur(t)}}errorClicked(t){this.hideValidationError()}showValidationError(){this.component.get(this.errorElementId).setStyle("display","block")}hideValidationError(){this.component.get(this.errorElementId).setStyle("display","none")}focus(){this.component.get(this.inputElementId).focus()}selectAll(){this.component.get(this.inputElementId).selectAll()}enable(){this.component.get(this.inputElementId).enable()}disable(){this.component.get(this.inputElementId).disable()}clear(){this.component.get(this.inputElementId).value="",this.tainted=!1,this.hideValidationError()}}const LOG$6=new Logger("EmailInput");class EmailInput extends CommonInput{static get COMPONENT_NAME(){return"EmailInput"}static get DEFAULT_PLACEHOLDER(){return"Email"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/emailInput.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/emailInput.css"}constructor(t,n=null,e=null,s=TextInput.DEFAULT_PLACEHOLDER,i=!1){super(EmailInput.COMPONENT_NAME,t,n,e,new EmailValidator(i,!i),s,"emailInput","emailError")}}const LOG$7=new Logger("PasswordInput");class PasswordInput extends CommonInput{static get COMPONENT_NAME(){return"PasswordInput"}static get DEFAULT_PLACEHOLDER(){return"Password"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/passwordInput.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/passwordInput.css"}constructor(t,n=null,e=null,s=TextInput.DEFAULT_PLACEHOLDER,i=!1){super(PasswordInput.COMPONENT_NAME,t,n,e,new RequiredValidator(!i),s,"passwordInput","passwordError")}}const LOG$8=new Logger("PasswordMatcherInputValue");class PasswordMatcherInputValue extends CommonInput{static get COMPONENT_NAME(){return"PasswordMatcherInputValue"}static get DEFAULT_PLACEHOLDER(){return"New password"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/passwordMatcherInputValue.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/passwordMatcherInputValue.css"}constructor(t,n=null,e=null,s=TextInput.DEFAULT_PLACEHOLDER,i=!1){super(PasswordMatcherInputValue.COMPONENT_NAME,t,n,e,new PasswordValidator(i),s,"passwordMatcherInputValueField","passwordMatcherInputValueError")}}const LOG$9=new Logger("PasswordMatcherInputControl");class PasswordMatcherInputControl extends CommonInput{static get COMPONENT_NAME(){return"PasswordMatcherInputControl"}static get DEFAULT_PLACEHOLDER(){return"Confirm password"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/passwordMatcherInputControl.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/passwordMatcherInputControl.css"}constructor(t,n=null,e=null,s=null,i=TextInput.DEFAULT_PLACEHOLDER,o=!1){super(PasswordMatcherInputControl.COMPONENT_NAME,t,n,s,new EqualsPropertyValidator(o,!1,n,e),i,"passwordMatcherInputControlField","passwordMatcherInputControlError")}}class PasswordMatcherModel{constructor(){this.newPassword=null,this.controlPassword=null}setNewPassword(t){this.newPassword=t}getNewPassword(){return this.newPassword}setControlPassword(t){this.controlPassword=t}getControlPassword(){return this.controlPassword}}const LOG$a=new Logger("PasswordMatcherInput");class PasswordMatcherInput{static get COMPONENT_NAME(){return"PasswordMatcherInput"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/passwordMatcherInput.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/passwordMatcherInput.css"}constructor(t,n=null,e=null,s=PasswordMatcherInput.DEFAULT_PLACEHOLDER,i=PasswordMatcherInput.DEFAULT_CONTROL_PLACEHOLDER,o=!1){this.componentFactory=InjectionPoint.instance(ComponentFactory),this.component=null,this.validator=null,this.passwordMatcherModel=new PasswordMatcherModel,this.name=t,this.model=n,this.passwordMatcherInputValue=InjectionPoint.instance(PasswordMatcherInputValue,["newPassword",this.passwordMatcherModel,(new CommonListeners).withEnterListener(this,this.passwordEntered).withKeyUpListener(this,this.passwordChanged),s,o]),this.passwordMatcherInputControl=InjectionPoint.instance(PasswordMatcherInputControl,["controlPassword",this.passwordMatcherModel,"newPassword",e,i,o])}postConfig(){this.component=this.componentFactory.create(PasswordMatcherInput.COMPONENT_NAME),CanvasStyles.enableStyle(PasswordMatcherInput.COMPONENT_NAME),this.component.setChild("passwordMatcherInputValue",this.passwordMatcherInputValue.component),this.component.setChild("passwordMatcherInputControl",this.passwordMatcherInputControl.component),this.validator=(new AndValidatorSet).withValidator(this.passwordMatcherInputValue.validator).withValidator(this.passwordMatcherInputControl.validator).withValidListener(new ObjectFunction(this,this.passwordMatcherValidOccured))}passwordMatcherValidOccured(){PropertyAccessor.setValue(this.model,this.name,this.passwordMatcherModel.getNewPassword())}passwordEntered(){this.passwordMatcherInputValue.validator.isValid()&&this.passwordMatcherInputControl.focus()}passwordChanged(){this.passwordMatcherInputControl.clear()}focus(){this.passwordMatcherInputValue.focus()}selectAll(){this.passwordMatcherInputValue.selectAll()}enable(){this.passwordMatcherInputValue.enable(),this.passwordMatcherInputControl.enable()}disable(){this.passwordMatcherInputValue.disable(),this.passwordMatcherInputControl.disable()}clear(){this.passwordMatcherInputValue.clear(),this.passwordMatcherInputControl.clear()}}const LOG$b=new Logger("PhoneInput");class PhoneInput extends CommonInput{static get COMPONENT_NAME(){return"PhoneInput"}static get DEFAULT_PLACEHOLDER(){return"Phone"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/phoneInput.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/phoneInput.css"}constructor(t,n=null,e=null,s=TextInput.DEFAULT_PLACEHOLDER,i=!1){super(PhoneInput.COMPONENT_NAME,t,n,e,new PhoneValidator(i,!i),s,"phoneInput","phoneError")}}const LOG$c=new Logger("TextInput");class TextInput$1 extends CommonInput{static get COMPONENT_NAME(){return"TextInput"}static get DEFAULT_PLACEHOLDER(){return"Text"}static get TEMPLATE_URL(){return"/assets/justrightjs-ui/textInput.html"}static get STYLES_URL(){return"/assets/justrightjs-ui/textInput.css"}constructor(t,n=null,e=null,s=TextInput$1.DEFAULT_PLACEHOLDER,i=!1){super(TextInput$1.COMPONENT_NAME,t,n,e,new RequiredValidator(!1,i),s,"textInput","textError")}}export{BackShade,BackShadeListeners,BannerMessage,Button,CheckBox,CommonInput,CommonListeners,CustomAppearance,DialogBox,EmailInput,PasswordInput,PasswordMatcherInput,PasswordMatcherInputControl,PasswordMatcherInputValue,PasswordMatcherModel,PhoneInput,TextInput$1 as TextInput};
